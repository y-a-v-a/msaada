name: Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: ''

env:
  CARGO_TERM_COLOR: always

jobs:
  test-before-release:
    name: Test Suite Gate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq openssl

      - name: Build release binary
        run: cargo build --release --verbose

      - name: Run all tests with backtrace
        env:
          RUST_BACKTRACE: 1
        run: cargo test --verbose --all-targets

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: release-test-failure-logs
          path: |
            target/debug/
          retention-days: 30

  release:
    name: release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: test-before-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            archive: tar.gz
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            archive: tar.gz tar.xz
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: zip
          - os: macos-latest
            target: aarch64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@v4
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          TOOLCHAIN_VERSION: stable
